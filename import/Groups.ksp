function Groups_prepare(i)
    PlayMode_copy(playMode, Playing[i].playMode)
    resetGroups()
    setActiveGroups()
    disallow_group($ALL_GROUPS)
    allowGroups(i)     
end function

function resetGroups
    declare i
    for i := 0 to Globals.maxGroups-1
        activeGroups[i] := -1
    end for
end function

function allowGroups(ind)
    declare r

    declare min := 0
    declare max := Globals.maxGroups-1
    declare i

    for i := 0 to Globals.maxGroups-1
        if (activeGroups[i] # -1)
            max := i
        end if
    end for

    if (UI.try = 0)
        r := random(min, max)
    else
        r := UI.try - 1
    end if

    Globals.lastGroupIndex := activeGroups[r]
    Globals.lastTakeIndex := r+1
    allow_group(Globals.lastGroupIndex)
end function

function setActiveGroups
    declare tmp
    declare @gname
    declare i
    @gname := formGroupName()
    // debug2(@gname)
    declare zg := zeroGroup()
    declare takeCount := Globals.takeCounts[playMode.artCode]

    for i := 0 to takeCount-1
        tmp := find_group(@gname & "_t" & (i+1))
        if (tmp = 0 and zg = 0)
            tmp := -1
        end if
        if (tmp >= 0 )
            // debug("zg: " & zg & "; gn = " & @gname & "_t" & (i+1) & "; found: " & tmp)            
            activeGroups[i]  := tmp
        end if
    end for
end function

function zeroGroup -> result
    result := 0
end function

function formGroupName() -> result

    result := "stl"

    if (playMode.lh_Vibrato > 0)
        result := "v" & playMode.lh_Vibrato
    end if

    if (playMode.slideIn > 0)
        result := "si"
    end if

    if (playMode.slideOut > 0)
        result := "so"
    end if

    if (playMode.slideUp > 0)
        result := "su"
    end if

    if (playMode.slideDown > 0)
        result := "sd"
    end if

    if (playMode.slideUp2 > 0)
        result := "si"
    end if

    if (playMode.slideDown2 > 0)
        result := "so"
    end if

    if (playMode.afterNoteNoise = 1)
        result := "stn"
    end if

end function
