macro PlayMode_on_init
    struct _PlayMode
        declare still // still note
        declare lh_Vibrato // vibrato by left hand articulation
        declare slideIn // slideIn sample triggers simultaniously with main note
        declare slideOut // slideOut sample triggers after release
        declare slideUp // slide from one note to another
        declare slideDown // slide from one note downto another
        declare slideUp2 // slide from one note to another using slideIn sample (for intervals more than 5 semitones)
        declare slideDown2 // slide from one note downto another using slideOut sample (for intervals more than 5 semitones)
        declare legato
        declare offset
        declare duration
        declare afterNoteNoise // noise after note is played when finger removes from the board

        declare artCode
    end struct

    struct _PlayModeGlobal
        declare &_PlayMode pm
        declare vibratoSpeed := VIBRATO_SPEED_DEFAULT
        declare vibratoDepth := 0

        declare lastNoteStart := -1
        declare vibratoNatural := 0
        declare slide := 0
        declare dir := 1        
    end struct

    declare &_PlayMode playMode // this is used for setting note play mode props at the moment new note starts,
    declare &_PlayModeGlobal playModeGlobal // this is used for keeping global play mode properties through time    

    PlayMode_resetPlayMode(playMode)
    PlayMode_resetPlayMode(playModeGlobal.pm)
    playModeGlobal.pm.slideIn := 0

end macro

macro PlayMode_resetPlayMode(#p#)
    #p#.still := 1
    #p#.lh_Vibrato := 0
    #p#.legato := 0
    #p#.offset := 0
    #p#.duration := -1
    #p#.afterNoteNoise := 0

    #p#.slideIn := 0
    #p#.slideOut := 0
    #p#.slideUp := 0
    #p#.slideDown := 0
    #p#.slideUp2 := 0
    #p#.slideDown2 := 0

    #p#.artCode := 0
end macro

macro PlayMode_copy(#p#, #p2#)
    #p#.still := #p2#.still
    #p#.lh_Vibrato := #p2#.lh_Vibrato
    #p#.legato := #p2#.legato
    #p#.offset := #p2#.offset
    #p#.duration := #p2#.duration
    #p#.afterNoteNoise := #p2#.afterNoteNoise

    #p#.slideIn := #p2#.slideIn
    #p#.slideOut := #p2#.slideOut

    #p#.slideUp := #p2#.slideUp
    #p#.slideDown := #p2#.slideDown

    #p#.slideUp2 := #p2#.slideUp2
    #p#.slideDown2 := #p2#.slideDown2

    #p#.artCode := #p2#.artCode
end macro

function setPlayMode(note, velocity)

    PlayMode_resetPlayMode(playMode)

end function

macro mPlayMode_isSlide(#p#, #result#)
    if (#p#.slideIn = 0 and #p#.slideOut = 0 and #p#.slideDown = 0 and #p#.slideDown2 = 0 and #p#.slideUp = 0 and #p#.slideUp2 = 0)
        #result# := 0
    else 
        #result# := 1
    end if
end macro
